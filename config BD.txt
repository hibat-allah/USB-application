Name data base: entreprisebd
connect: \c entreprisebd
psql -U postgres
password: Hello123!

select * from logs;

Nom user	Username	Password

Admin: 		 zflub 		M#N@d31N
Client:		 xlient 	M4B1U#

CREATE USER zflub WITH PASSWORD 'M#N@d31N';
CREATE USER xlient WITH PASSWORD 'M4B1U#';

GRANT ALL PRIVILEGES ON DATABASE entreprisebd TO zflub;
ALTER DATABASE entreprisebd OWNER TO zflub;
GRANT USAGE ON SCHEMA public TO zflub;

GRANT SELECT, INSERT,UPDATE,DELETE ON ALL TABLES IN SCHEMA public TO zflub;

GRANT SELECT ON ALL TABLES IN SCHEMA public TO xlient;

-- Ensure regular_user has usage rights on the schema
GRANT USAGE ON SCHEMA public TO xlient;


------------------------------ Schema -------------------------------

 Users (email (KEY),userName,firstTime,password )
Machine (nameM( KEY),typeM)
    CONSTRAINT typeM_check CHECK (typeM IN ('selectif', 'complet'))
Class (guid (key),chemain,type,description)
    CONSTRAINT type_check CHECK (type IN ('HidUsb', 'WINUSB', 'RtlWlanu', 'USBSTOR', 'webcam' ,'usbprint' ))

DriverClass (guid*,nameDrives)
Device (idDevice (KEY),nameD,inf,classI_id*)
 DeviceInstalled (idDevice*,date_installation )
Class_Users (class_id*,user_id*)
    PRIMARY KEY (class_id, user_id)
Device_Users (device_id*(key),user_id*(key))
    PRIMARY KEY (device_id, user_id)

Logs (log_id(key) ,user_id*, action_type,file_name,file_path,device_id*,machine_id*,timestamp) 

    CONSTRAINT action_type_check CHECK (action_type IN ('transfert', 'creation', 'suppression', 'copie'))


------------------------------ tables -------------------------------

-- Création de la table User
CREATE TABLE Users (
    email VARCHAR(254),
    userName VARCHAR(100) PRIMARY KEY,
    firstTime BOOLEAN NOT NULL DEFAULT 'FALSE',
    password VARCHAR(100)
);
-- Création de la table Machine
CREATE TABLE Machine (
    nameM VARCHAR(100) PRIMARY KEY,
    typeM VARCHAR(100) NOT NULL DEFAULT 'complet',
    CONSTRAINT typeM_check CHECK (typeM IN ('selectif', 'complet'))
);
-- Création de la table class
CREATE TABLE Class (
    guid VARCHAR(100) PRIMARY KEY,
    chemain VARCHAR(100) NOT NULL,
    type VARCHAR(100) NOT NULL DEFAULT 'hid',
    description VARCHAR(200) NOT NULL,
    CONSTRAINT type_check CHECK (type IN ('HidUsb', 'WINUSB', 'RtlWlanu', 'USBSTOR', 'webcam' ,'usbprint' ))
);


-- Création de la table DriverClass
CREATE TABLE DriverClass (
    guid VARCHAR(100),
    nameDrives VARCHAR(100) NOT NULL,
    FOREIGN KEY (guid) REFERENCES Class(guid)
);

-- Création de la table Device
CREATE TABLE Device (
    idDevice VARCHAR(50) PRIMARY KEY,
    nameD VARCHAR(100),
    inf TEXT NOT NULL,
    classI_id VARCHAR(100) NOT NULL,
    FOREIGN KEY (classI_id) REFERENCES Class(guid)
);

-- Création de la table DeviceInstalled
CREATE TABLE DeviceInstalled (
    idDevice VARCHAR(20),
    date_installation TIMESTAMP NOT NULL,
    FOREIGN KEY (idDevice) REFERENCES Device(idDevice)
);

-- Création de la table Class_Users
CREATE TABLE Class_Users (
    class_id VARCHAR(100) NOT NULL,
    user_id VARCHAR(254) NOT NULL,
    
    FOREIGN KEY (class_id) REFERENCES Class(guid),
    FOREIGN KEY (user_id) REFERENCES Users(userName),
    PRIMARY KEY (class_id, user_id)
);

-- Création de la table Device_Users
CREATE TABLE Device_Users (
    device_id VARCHAR(50) NOT NULL,
    user_id VARCHAR(254) NOT NULL,
    FOREIGN KEY (device_id) REFERENCES Device(idDevice),
    FOREIGN KEY (user_id) REFERENCES Users(userName),
    PRIMARY KEY (device_id, user_id)
);

CREATE TABLE Logs (
    log_id SERIAL PRIMARY KEY,
    user_id VARCHAR(254) NOT NULL,
    action_type VARCHAR(100) NOT NULL,
    file_name VARCHAR(100),
    file_path VARCHAR(100)
    device_id VARCHAR(50) NOT NULL,
    machine_id VARCHAR(100)NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(userName),
    FOREIGN KEY (device_id) REFERENCES Device(idDevice),
    FOREIGN KEY (machine_id) REFERENCES Machine(nameM),
    CONSTRAINT action_type_check CHECK (action_type IN ('transfert', 'creation', 'connexion','modified', 'copie'))
);


grant usage,select on sequence logs_log_id_seq to zflub;
grant select, insert,update on table logs to zflub;


INSERT INTO Class_Users VALUES (
'{4d36e967-e325-11ce-bfc1-08002be10318}','user');

INSERT INTO Class (guid, chemain, type, description) VALUES
('{4d36e967-e325-11ce-bfc1-08002be10318}', 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\USBSTOR', 'USBSTOR', 'Peripherique de stockage USB'),
('{1ed2bbf9-11f0-4084-b21f-ad83a8e6dcdc}', 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\usbprint', 'usbprint','Imprimante USB'),
('{745a17a0-74d3-11d0-b6fe-00a0c90f57da}', 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\HidUsb', 'HidUsb','Peripherique d interface humaine (souris / claviers...)'),
('{eec5ad98-8080-425f-922a-dabf3de3f69a}', 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WINUSB', 'WINUSB','Disque dur externe'),
('{ca3e7ab9-b4c3-4ae6-8251-579ef933890f}', 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\usbvideo', 'webcam','Peripherique video USB (webcam)'),
('{4d36e972-e325-11ce-bfc1-08002be10318}', 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\RtlWlanu', 'RtlWlanu','Carte réseau sans fil USB');


INSERT INTO  device_users (device_id, user_id) VALUES 
('USB\\VID_058F&PID_6387', 'user');

INSERT INTO device (device_id, device_name, class_guid, driver_inf) VALUES 
('USB\\VID_058F&PID_6387', 'qsd', '{4D36E967-E325-11CE-BFC1-08002BE10318}', 'usbstor.inf');

INSERT INTO device VALUES 
('USB\\VID_058F&PID_6387', 'qsd', 'usbstor.inf','{4d36e967-e325-11ce-bfc1-08002be10318}');

INSERT INTO class_users Values ('{4d36e967-e325-11ce-bfc1-08002be10318}', 'user');

INSERT INTO Users (email, userName, firstTime, password)
VALUES ('user@entreprisemail.dz', 'user', false, NULL);


Insert into machine values ('USER','selectif') On conflict (nameM) DO NOTHING;


Insert into DriverClass values ('{88BAE032-5A81-49F0-BC3D-A4FF138216D6}','USB\Class_02');
Insert into DriverClass values ('{4d36e967-e325-11ce-bfc1-08002be10318}','STORAGE\VOLUME');
Insert into DriverClass values ('{4d36e967-e325-11ce-bfc1-08002be10318}','GenDisk');
Insert into DriverClass values ('{4d36e967-e325-11ce-bfc1-08002be10318}','USBSTOR\DISK');
Insert into DriverClass values ('{745a17a0-74d3-11d0-b6fe-00a0c90f57da}','HID\DEVICE');
Insert into DriverClass values ('{745a17a0-74d3-11d0-b6fe-00a0c90f57da}','USB\Class_03');
Insert into DriverClass values (' ',' ');
Insert into DriverClass values (' ',' ');
new ClasseDrives( "{88BAE032-5A81-49F0-BC3D-A4FF138216D6}","USB\\Class_02","2"),
new ClasseDrives("{745A17A0-74D3-11D0-B6FE-00A0C90F57DA}", "HID_DEVICE","3"),
new ClasseDrives("{745A17A0-74D3-11D0-B6FE-00A0C90F57DA}", "USB\\Class_03","4"),

--deletion of the content
delete from ..;








